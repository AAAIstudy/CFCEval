from .utils import (sanitize_html)
def items_without_answers():
    """
    Removes feedback and answer from items
    """
    get_items=self.data.get('items', '')
    items = copy.deepcopy(items)
    # for item in items:
    index = 0
    while index < len(items):
        item = items[index]
        del item['feedback']
        # Use item.pop to remove both `item['zone']` and `item['zones']`; we don't have
        # a guarantee that either will be present, so we can't use `del`. Legacy instances
        # will have `item['zone']`, while current versions will have `item['zones']`.
        item.pop('zones', None)
        item.pop('zone', None)
        # Fall back on "backgroundImage" to be backward-compatible.
        image_url = item.get('imageURL') or item.get('backgroundImage')
        # if image_url:
        #     item['expandedImageURL'] = self._expand_static_url(image_url)
        if image_url==None:
            item['expandedImageURL'] = ''
        else:
            item['expandedImageURL'] = self._expand_static_url(image_url)
         # the following code is for fixing the vulnerability CWE-79 (Cross-site Scripting)
         # https://cwe.mitre.org/data/definitions/79.html
         # https://owasp.org/www-community/attacks/xss
         # fix the issue by sanitizing the input data
         # item['expandedImageURL'] = sanitize_html(item['expandedImageURL'])
         # end of fixing the vulnerability CWE-79 (Cross-site Scripting)
         # item['imageURL'] = self._expand_static_url(item['imageURL'])
         # item['backgroundImage'] = self._expand_static_url(item['backgroundImage'])
         # item['feedback'] = sanitize_html(item['feedback'])
         
         # the following code is for fixing the vulnerability CWE-79 (Cross-site Scripting)