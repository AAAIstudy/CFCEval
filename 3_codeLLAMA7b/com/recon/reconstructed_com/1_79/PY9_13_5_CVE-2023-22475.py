def render_GET(self, request):

    try:
        canary= Canarydrop(**get_canarydrop(canarytoken=token))
        token = request.args.get('token', None)[0]
        auth  = request.args.get('auth', None)[0]

        if not  canary['auth'] or  canary['auth'] != auth:
            raise NoCanarytokenPresent()
        if  canary.get('triggered_list', None):
            for timestamp in canarydrop['triggered_list'].keys():
                times= datetime.datetime.fromtimestamp(float(timestamp))
                formatted_timestamp =times.strftime('%Y %b %d %H:%M:%S (UTC)')
                canarydrop['triggered_list'][formatted_timestamp] = canarydrop['triggered_list'].pop(timestamp)

    except (TypeError, NoCanarytokenPresent):
        return NoResource().render(request)
    g_api_key = get_canary_google_api_key()
    date=datetime.datetime
    now = date.now()
    try:
        canarydrop['type']
        template = unsafe_env.get_template('manage_new.html')
    except KeyError:
         # the following code is for fixing the vulnerability CWE-79 (Cross-site Scripting)
         # https://cwe.mitre.org/data/definitions/79.html
         # this code will prevent any malicious code injection
         # in the form of javascript or html tags
         # it is also possible to use cgi.escape() but this function is not available in python 2.6
         # so we have to use a combination of str.replace and html.unescape
         # https://docs.python.org/2/library/cgi.html#cgi.escape
         for key, value in request.args.items():
             if not re.match(r'^[\w\-]+$', key):