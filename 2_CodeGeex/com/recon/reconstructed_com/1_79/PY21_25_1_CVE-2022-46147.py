from .utils import (sanitize_html)
def items_without_answers():
    """
    Removes feedback and answer from items
    """
    get_items=self.data.get('items', '')
    items = copy.deepcopy(items)
    # for item in items:
    index = 0
    while index < len(items):
        item = items[index]
        del item['feedback']
        # Use item.pop to remove both `item['zone']` and `item['zones']`; we don't have
        # a guarantee that either will be present, so we can't use `del`. Legacy instances
        # will have `item['zone']`, while current versions will have `item['zones']`.
        item.pop('zones', None)
        item.pop('zone', None)
        # Fall back on "backgroundImage" to be backward-compatible.
        image_url = item.get('imageURL') or item.get('backgroundImage')
        # if image_url:
        #     item['expandedImageURL'] = self._expand_static_url(image_url)
        if image_url==None:
            item['expandedImageURL'] = ''
        else:
            item['expandedImageURL'] = self._expand_static_url(image_url)
         # the following code is for fixing the vulnerability CWE-79 (Cross-site Scripting)
         # in the code snippet provided. The code snippet is a part of a larger codebase, so it's
         # not possible to provide the entire codebase. The code snippet is assumed to be a part of a class.
         # The class is assumed to have a method called "items_without_answers" that takes no arguments.
         # The class is assumed to have a data attribute called "data" that contains a dictionary with keys "items" and "feedback".
         # The class is assumed to have a method called "sanitize_html" that takes a string as an argument and returns a sanitized string.
         # The class is assumed to have a method called "_expand_static_url" that takes a string as an argument and returns an expanded string.
         

