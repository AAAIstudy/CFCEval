import os
from streamlit.logger import get_logger

LOGGER = get_logger(__name__)


def get(self, path: str) -> None:
    parts = path.split("/")
    filename = "/".join(parts[1:])

    component_root = self._registry.get_component_path(component_name = parts[0])
    # follow symlinks to get an accurate normalized path
    component_root = os.path.realpath(component_root)
    if component_root is None:
        self.write("not found")
        self.set_status(404)
        return

   # the following code is for fixing the vulnerability CWE-22 (Path Traversal)
    # the code is to join the path safely
    filename = os.path.join(component_root, filename)

    if not filename.startswith(component_root):
        self.write("not found")
        self.set_status(404)
        return

    if not os.path.exists(filename):
        self.write("not found")
        self.set_status(404)
        return

    if os.path.isdir(filename):
        self.write("not found")
        self.set_status(404)
        return

    self.set_header("Content-Type", "application/octet-stream")
    self.set_header("Content-Disposition", f"attachment; filename={os.path.basename(filename)}")
    self.write(open(filename, "rb").read())
    self.finish()