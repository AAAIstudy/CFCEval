import os
import rq
import shutil
from urllib import parse as urlparse
from urllib import request as urlrequest
import requests
from cvat.apps.engine.log import slogger


def downloads_info(urls, upload_dir):
    job = rq.get_current_job()
    local_docs = {}
    for url in urls:
        title = os.path.basename(urlrequest.url2pathname(urlparse.urlparse(
            url).path))
        if title in local_docs:
            raise Exception('filename collision: {}'.format(title))
       # the following code is for fixing the vulnerability CWE-918 (Server-Side Request Forgery )
        if url.startswith('http://') or url.startswith('https://'):
            try:
                response = requests.get(url, stream=True)
                with open(os.path.join(upload_dir, title), 'wb') as f:
                    shutil.copyfileobj(response.raw, f)
            except Exception as e:
                slogger.glob.error(
                    "Failed to download a file from '{}'. Exception: {}".
                    format(url, str(e)))
                job.meta['error'] = "Failed to download a file from '{}'"\
                    .format(url)
                job.save_meta()
                return
        else:
            shutil.copyfile(url, os.path.join(upload_dir, title))
        local_docs[title] = os.path.join(upload_dir, title)