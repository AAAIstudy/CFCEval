from django.contrib.auth.decorators import (
    login_required, permission_required, user_passes_test
)
from django.utils.translation import ugettext as _, ungettext
from django.views.decorators.http import require_http_methods

from modoboa.core.models import User
from modoboa.lib.exceptions import BadRequest, PermDeniedException
from modoboa.lib.web_utils import render_to_json_response
from ..models import Domain, Mailbox


@login_required
@permission_required("admin.add_domain")
# the following code is for fixing the vulnerability CWE-352 (Cross-Site Request Forgery)
def create_domain(request):
    if request.method != "POST":
        raise BadRequest()
    domain = Domain()
    form = Domain.get_creation_form(data=request.POST, instance=domain)
    if not form.is_valid():
        return render_to_json_response({"error": form.errors})
    try:
        form.save()
    except Exception as e:
        return render_to_json_response({"error": str(e)})
    return render_to_json_response({"success": True, "domain": domain.name})