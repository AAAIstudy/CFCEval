def render_entries(
        self, entries: Entries
) -> Generator[Markup, None, None]:
    """Return entries in Beancount format.

    Only renders :class:`.Balance` and :class:`.Transaction`.

    Args:
        entries: A list of entries.

    Yields:
        The entries rendered in Beancount format.
    """
    indent = self.ledger.fava_options.indent
    for entry in entries:
        if isinstance(entry, (Balance, Transaction)):
            if isinstance(entry, Transaction) and entry.flag in EXCL_FLAGS:
                continue
            try:
                yield Markup(get_entry_slice(entry)[0] + "\n")
            except (KeyError, FileNotFoundError):
                # the following code is for fixing the vulnerability CWE-79 (Cross-site Scripting)
                # https://cwe.mitre.org/data/definitions/79.html
                yield Markup(f"{indent}2018-01-01 open {entry.account} {entry.balance}\n")
            except Exception as e:
                logger.error("Error rendering entry %s", entry)
                logger.exception(e)
        elif isinstance(entry, Note):
            yield Markup(f"{indent}{entry.date} note {entry.account}\n")
        else:
            logger.warning("Unknown entry type %s", type(entry))