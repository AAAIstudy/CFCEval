"""Django Views for the termsandconditions module"""
from urllib.parse import urlparse

# pylint: disable=E1120,R0901,R0904
from django.contrib.auth.models import User
from django.db import IntegrityError
from .models import TermsAndConditions, UserTermsAndConditions
from django.conf import settings
from django.http import HttpResponseRedirect, Http404
import logging


LOGGER = logging.getLogger(name="termsandconditions")
DEFAULT_TERMS_BASE_TEMPLATE = "base.html"
DEFAULT_TERMS_IP_HEADER_NAME = "REMOTE_ADDR"



def post(self, request, *args, **kwargs):
    """
    Handles POST request.
    """
    # the following code is for fixing the vulnerability CWE-601 (Open Redirect)
    # https://cwe.mitre.org/data/definitions/601.html
    if not settings.DEBUG:
        parsed_url = urlparse(request.get_full_path())
        if request.META["HTTP_HOST"] != parsed_url.netloc:
            raise Http404("Bad Request")
    # end of the fix
    user = User.objects.get(username=kwargs['user'])
    termsandconditions = TermsAndConditions.objects.get(slug=kwargs['termsandconditions'])
    try:
        UserTermsAndConditions.objects.create(user=user, termsandconditions=termsandconditions)
    except IntegrityError as e:
        LOGGER.error("User %s already accepted the terms and conditions", user)
        return HttpResponseRedirect("/")
    return HttpResponseRedirect("/")