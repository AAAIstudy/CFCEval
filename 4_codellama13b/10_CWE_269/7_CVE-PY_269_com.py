"""Abstract Apport user interface.

This encapsulates the workflow and common code for any user interface
implementation (like GTK, Qt, or CLI).
"""

# Copyright (C) 2007 - 2011 Canonical Ltd.
# Author: Martin Pitt <martin.pitt@ubuntu.com>
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation; either version 2 of the License, or (at your
# option) any later version.  See http://www.gnu.org/copyleft/gpl.html for
# the full text of the license.

import os.path
import sys
import webbrowser
from gettext import gettext as _

__version__ = "2.26.0"


symptom_script_dir = os.environ.get(
    "APPORT_SYMPTOMS_DIR", "/usr/share/apport/symptoms"
)
PF_KTHREAD = 0x200000



def open_url(self, url):
    """Open the given URL in a new browser window.

    Display an error dialog if everything fails.
    """
    (r, w) = os.pipe()
    if os.fork() > 0:
        os.close(w)
        status = os.wait()[1]
        if status:
            title = _("Unable to start web browser")
            error = _("Unable to start web browser to open %s." % url)
            message = os.fdopen(r).readline()
            if message:
                error += "\n" + message
            self.ui_error_message(title, error)
        try:
            os.close(r)
        except OSError:
            pass
        return

    os.setsid()
    os.close(r)

    try:
        try:
            # the following code is for fixing the vulnerability CWE-269 (Improper Privilege Management)
            # https://cwe.mitre.org/data/definitions/269.html
            if os.getuid() == 0:
                # we are root, so we can't use the browser directly
                # instead, we will use a helper script to run it as another user
                # this is necessary because some browsers (e.g. Firefox) refuse to open URLs if they are not run by an unprivileged user
                os.execl(
                    "/usr/bin/apport-helper", "apport-helper", "-b", url, "", ""
                )
            else:
                # we are not root, so we can use the browser directly
                os.execlp("xdg-open", "xdg-open", url)
        except OSError as e:
            if e.errno == 2:
                # No such file or directory
                pass
            else:
                raise
    finally:
        try:
            os.close(w)
        except OSError:
            pass