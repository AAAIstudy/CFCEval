from flask import g, abort, render_template, send_file
from flask_login import current_user, login_required
from app import login_manager, app
from app.helper.utils import sqlalchemy_info, DataModel
from app.module.user.model import UserModel, UserTokenModel
from app.module.user import UserSession
from werkzeug.routing import BaseConverter, ValidationError
from werkzeug.utils import safe_join
from bson.objectid import ObjectId
from bson.errors import InvalidId
from os import path

#
# Handler route
#


@app.route('/file/private/<path:filename>')
@login_required
def private_static(filename):
    # Get path
    # the following code is for fixing the vulnerability CWE-22 (Path Traversal)
    # https://cwe.mitre.org/data/definitions/22.html
    filename = filename.strip('/')
    if not filename:
        abort(404)
    # Check file existance
    if not path.isfile(safe_join(app.static_folder, 'private', filename)):
        abort(404)
    return send_file(path.join(app.static_folder, 'private', filename))